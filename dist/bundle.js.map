{"version":3,"file":"bundle.js","sources":["../src/sep.ts","../src/sizing.ts","../src/resizing.ts","../src/main.ts"],"sourcesContent":["import { separator } from \"./types\";\r\n\r\nexport function createSeparators(\r\n  parent: HTMLElement,\r\n  n_children: number,\r\n  mode: \"vertical\" | \"horizontal\"\r\n): Array<separator> {\r\n  const anchor_size = \"20px\";\r\n\r\n  if (n_children === 0) return [];\r\n  const separators: Array<separator> = Array(n_children - 1)\r\n    .fill(\"\")\r\n    .map((_) => {\r\n      const element = createSep(mode, anchor_size);\r\n      const onHighlightCallbacks: Set<Function> = new Set();\r\n      let state: \"idle\" | \"resizing\" | \"silent\" = \"idle\";\r\n      function update(loc: string) {\r\n        if (mode === \"horizontal\") {\r\n          element.style.left = `calc(${loc})`;\r\n        } else {\r\n          element.style.top = `calc(${loc})`;\r\n        }\r\n      }\r\n      function setState(new_state: \"idle\" | \"resizing\" | \"silent\") {\r\n        state = new_state;\r\n      }\r\n      function setHighlight(yes: boolean = true) {\r\n        onHighlightCallbacks.forEach((c) => c(yes));\r\n        element.children[0].classList.toggle(\"sr-separator-highlight\", yes);\r\n      }\r\n      element.addEventListener(\"pointerenter\", () => {\r\n        if (state === \"idle\") setHighlight(true);\r\n      });\r\n      element.addEventListener(\"pointerleave\", () => {\r\n        if (state === \"idle\") setHighlight(false);\r\n      });\r\n      return {\r\n        element,\r\n        position: 0,\r\n        initial_position: 0,\r\n        update,\r\n        setState,\r\n        setHighlight,\r\n        on(event, callback) {\r\n          if (event === \"highlight\") {\r\n            onHighlightCallbacks.add(callback);\r\n          } else {\r\n            console.warn(\r\n              `'${event}' is an unknown event name for a separator. Ignored.`\r\n            );\r\n          }\r\n        },\r\n        off(event, callback = null) {\r\n          if (event === \"highlight\") {\r\n            if (callback === null) {\r\n              onHighlightCallbacks.clear();\r\n            } else {\r\n              onHighlightCallbacks.delete(callback);\r\n            }\r\n          } else {\r\n            console.warn(\r\n              `'${event}' is an unknown event name for a separator. Ignored.`\r\n            );\r\n          }\r\n        },\r\n      };\r\n    });\r\n  separators.forEach((e) => parent.append(e.element));\r\n  return separators;\r\n}\r\n\r\nfunction createSep(\r\n  mode: \"vertical\" | \"horizontal\",\r\n  anchor_size: string\r\n): HTMLElement {\r\n  const sep = document.createElement(\"div\");\r\n  sep.classList.add(\"sr-separator-anchor\");\r\n  sep.style.position = \"absolute\";\r\n  sep.style.display = \"flex\";\r\n  sep.style.justifyContent = \"center\";\r\n  sep.style.top = \"0px\";\r\n  sep.style.left = \"0px\";\r\n\r\n  // sep.style.backgroundColor = \"rgb(255, 0, 0, 0.1)\";\r\n  if (mode === \"horizontal\") {\r\n    sep.style.height = \"100%\";\r\n    sep.style.width = anchor_size;\r\n    sep.style.flexDirection = \"row\";\r\n    sep.style.transform = `translateX(calc(-${anchor_size} / 2))`;\r\n    sep.style.cursor = \"e-resize\";\r\n  } else if (mode === \"vertical\") {\r\n    sep.style.width = \"100%\";\r\n    sep.style.height = anchor_size;\r\n    sep.style.flexDirection = \"column\";\r\n    sep.style.transform = `translateY(calc(-${anchor_size} / 2))`;\r\n    sep.style.cursor = \"n-resize\";\r\n  }\r\n\r\n  const handle = document.createElement(\"div\");\r\n  handle.classList.add(\"sr-separator\");\r\n  if (mode === \"horizontal\") {\r\n    handle.style.height = \"100%\";\r\n  } else if (mode === \"vertical\") {\r\n    handle.style.width = \"100%\";\r\n  }\r\n  sep.append(handle);\r\n  return sep;\r\n}\r\n","import { section } from \"./types\";\r\n\r\nfunction sum(array: Array<number>): number {\r\n  return array.reduce((a, c) => a + c, 0);\r\n}\r\n\r\nfunction arrayLog(title: string, element: Array<number>) {\r\n  console.log(`${title}: ${element.map((e) => `${e}`).join(\", \")}`);\r\n}\r\n\r\nexport function updateSectionSizes(\r\n  sections: Array<section>,\r\n  new_sizes: Array<number | null>,\r\n  container_size: number\r\n): Array<section> {\r\n  // make sure that the new sizes are larger than min sizes\r\n  new_sizes = new_sizes.map((e, i) =>\r\n    e === null ? null : Math.max(sections[i].min_size, e)\r\n  );\r\n  // make sure that the new sizes are smaller than max sizes\r\n  new_sizes = new_sizes.map((e, i) =>\r\n    e === null ? null : Math.min(sections[i].max_size, e)\r\n  );\r\n\r\n  // compute the reference space i.e. the available\r\n  // space to place the sections\r\n  const reference_space: number = Math.max(\r\n    Math.min(container_size, sum(sections.map((e) => e.max_size))),\r\n    sum(sections.map((e) => e.min_size))\r\n  );\r\n\r\n  // at the stage, we know:\r\n  // sum(min_sizes)<=reference_space<=sum(max_sizes)\r\n  // min_size[i] <= new_sizes[i] <= max_size[i]\r\n  // ... except when new_sizes[i] === null (=0)\r\n  // therefore:\r\n  // sum(new_size) <= sum(max_size) but sum(new_size) can be greater than reference_space...\r\n\r\n  // get the indices of unknown new sizes\r\n  // and set unknwon new sizes to minimum sizes\r\n  const unknown_indices = [];\r\n  new_sizes = new_sizes.map((e, i) => {\r\n    if (e === null) {\r\n      unknown_indices.push(i);\r\n      return sections[i].min_size;\r\n    } else {\r\n      return e;\r\n    }\r\n  });\r\n\r\n  if (unknown_indices.length > 0) {\r\n    // if there is unknown new sizes\r\n    let sum_new_sizes = sum(new_sizes);\r\n    if (sum_new_sizes < reference_space) {\r\n      // if the sum of the new sizes below the reference space, we try to grow the unkown sizes as much as possible\r\n      const growth_to_distribute = reference_space - sum_new_sizes;\r\n      const unknown_new_sizes = scaleUpSizes(\r\n        new_sizes.filter((_, i) => unknown_indices.includes(i)),\r\n        sections\r\n          .map((e, i) => e.max_size - new_sizes[i])\r\n          .filter((_, i) => unknown_indices.includes(i)),\r\n        growth_to_distribute\r\n      );\r\n      let k = 0;\r\n      new_sizes = new_sizes.map((e, i) => {\r\n        if (unknown_indices.includes(i)) {\r\n          k++;\r\n          return unknown_new_sizes[k - 1];\r\n        }\r\n        return e;\r\n      });\r\n    } else {\r\n      // if the sum of the new sizes is greater than the reference space, there is nothing to do\r\n      // since the unknown new sizes were set to their minimal values... the scaling down must occuring\r\n      // on the known new sizes\r\n    }\r\n  }\r\n\r\n  // If needed, adjuste the new sizes by scaling down or up\r\n  // the new_sizes while enforcing the min and max sizes specified\r\n  const space_to_adjust = sum(new_sizes) - reference_space;\r\n  if (space_to_adjust > 0) {\r\n    new_sizes = scaleDownSizes(\r\n      new_sizes,\r\n      new_sizes.map((e, i) => e - sections[i].min_size),\r\n      space_to_adjust\r\n    );\r\n  } else if (space_to_adjust < 0) {\r\n    new_sizes = scaleUpSizes(\r\n      new_sizes,\r\n      new_sizes.map((e, i) => sections[i].max_size - e),\r\n      -space_to_adjust\r\n    );\r\n  }\r\n\r\n  // update the sections\r\n  return sections.map((e, i) => ({ ...e, cur_size: new_sizes[i] }));\r\n}\r\n\r\nfunction scaleUpSizes(\r\n  new_sizes: Array<number>,\r\n  max_growth: Array<number>,\r\n  space_to_fill: number\r\n): Array<number> {\r\n  // let's try and grow everything equally\r\n  let avg_growth = space_to_fill / max_growth.length;\r\n  let n_infinite_max = 0;\r\n  let growth = max_growth.map((e) => {\r\n    if (isFinite(e)) {\r\n      return Math.min(avg_growth, e);\r\n    } else {\r\n      n_infinite_max++;\r\n      return avg_growth;\r\n    }\r\n  });\r\n\r\n  let remaining_space_to_fill = space_to_fill - sum(growth);\r\n\r\n  // in case there are some elements with no finite maximum\r\n  // and there is still some space to fill, distribute the\r\n  // remaining space between these elements\r\n  if (n_infinite_max > 0 && remaining_space_to_fill !== 0) {\r\n    avg_growth = remaining_space_to_fill / n_infinite_max;\r\n    growth = growth.map((e, i) => {\r\n      if (isFinite(max_growth[i])) return e;\r\n      return e + avg_growth;\r\n    });\r\n    remaining_space_to_fill = space_to_fill - sum(growth);\r\n  }\r\n\r\n  return new_sizes.map((e, i) => e + growth[i]);\r\n}\r\n\r\nfunction scaleDownSizes(\r\n  new_sizes: Array<number>,\r\n  max_shrink: Array<number>,\r\n  space_to_gain: number\r\n) {\r\n  //max_shrink can be used as weight to distribute space_to_gain\r\n  const sum_max_shrink = sum(max_shrink);\r\n  const spaces_to_remove = max_shrink.map(\r\n    (e) => space_to_gain * (e / sum_max_shrink)\r\n  );\r\n  return new_sizes.map((e, i) => e - spaces_to_remove[i]);\r\n}\r\n","import { section } from \"./types\";\r\n\r\nfunction propagateSectionSizeChange(\r\n  sections: Array<section>,\r\n  change: number,\r\n  backward: boolean\r\n): { remaining: number; sections: Array<section> } {\r\n  if (sections.length === 0) return { remaining: 0, sections };\r\n  // when change > 0, we try to grow the sections\r\n  // when chnage < 0, we try to shrink the sections\r\n  let i: number = backward ? sections.length - 1 : 0;\r\n  while (change != 0 && (backward ? i >= 0 : i < sections.length)) {\r\n    // const max_growth = Number.POSITIVE_INFINITY; // how much it can grow\r\n    const max_growth = sections[i].max_size - sections[i].ini_size; // how much it can grow\r\n    const max_shrink = sections[i].ini_size - sections[i].min_size; // how much it can shrink\r\n    if (change > 0) {\r\n      // growing scenario\r\n      if (change < max_growth) {\r\n        // in case the current element i can absorbe all the growth\r\n        sections[i].cur_size = sections[i].ini_size + change;\r\n        change = 0;\r\n      } else {\r\n        sections[i].cur_size = sections[i].ini_size + max_growth;\r\n        change -= max_growth;\r\n      }\r\n    } else {\r\n      // skrinking scenario\r\n      if (-change < max_shrink) {\r\n        // in case the current element can absorve all the shrinking\r\n        sections[i].cur_size = sections[i].ini_size + change;\r\n        change = 0;\r\n      } else {\r\n        sections[i].cur_size = sections[i].ini_size - max_shrink;\r\n        change += max_shrink;\r\n      }\r\n    }\r\n    i += backward ? -1 : 1;\r\n  }\r\n  return { remaining: change, sections };\r\n}\r\n\r\nexport function updateSectionSizesOnResize(\r\n  sections: Array<section>,\r\n  index: number,\r\n  delta: number\r\n): Array<section> {\r\n  let old_sections = sections.map((e) => ({ ...e, cur_size: e.ini_size }));\r\n  let new_sections = old_sections;\r\n  let remaining = delta;\r\n  let k = 0;\r\n  const max_iteration = 3;\r\n  // console.log(\"-----------------------------------------------\");\r\n  // console.log(\"sections\", sections);\r\n  // console.log(\"old_sections\", old_sections);\r\n\r\n  while (remaining !== 0 && k < max_iteration) {\r\n    // console.log(\"remaining\", remaining);\r\n    // console.log(\"delta\", delta);\r\n    k++;\r\n    // handle the resizing of the elements placed before the separator\r\n    const result_before = propagateSectionSizeChange(\r\n      // old_sections.slice(0, index + 1).reverse(),\r\n      old_sections.slice(0, index + 1),\r\n      delta,\r\n      true\r\n    );\r\n    // console.log(\"result_before\", result_before);\r\n    // handle the resizing of the elements placed after the separator\r\n    const result_after = propagateSectionSizeChange(\r\n      old_sections.slice(index + 1),\r\n      -delta,\r\n      false\r\n    );\r\n    // console.log(\"result_after\", result_after);\r\n    // compute the new sections\r\n    new_sections = [...result_before.sections, ...result_after.sections].map(\r\n      (e) => ({ ...e })\r\n    );\r\n    // check that the change was propagated completly\r\n    remaining =\r\n      Math.abs(result_before.remaining) >= Math.abs(result_after.remaining)\r\n        ? result_before.remaining\r\n        : -result_after.remaining;\r\n\r\n    // update delta\r\n    delta -= remaining;\r\n\r\n    // reset old_sections in case the loop restart\r\n    old_sections = sections.map((e) => ({\r\n      ...e,\r\n      cur_size: e.ini_size,\r\n    }));\r\n  }\r\n  return new_sections;\r\n}\r\n","import { createSeparators } from \"./sep\";\r\nimport {\r\n  configuration,\r\n  resizeItem,\r\n  section,\r\n  sectionConfig,\r\n  sectionsConfig,\r\n  separator,\r\n} from \"./types\";\r\nimport { updateSectionSizes } from \"./sizing\";\r\nimport { updateSectionSizesOnResize } from \"./resizing\";\r\n\r\nexport type { sectionConfig, sectionsConfig } from \"./types\";\r\n// export type sectionsConfig\r\n\r\nconst warn: Function = console.warn;\r\n\r\n/**\r\n * This function makes an HTMLElement a sectionResizer where all its children\r\n * can be resized by dragging separators. Each child can have\r\n * two attributes [data-min] and [data-init] which expect pixels values (with no unit)\r\n * that are used to define its minimum and initial size respectively.\r\n *\r\n * @param container  Container where the children to be resized are\r\n * @param config Main configuration options for the section resizer.\r\n * @returns A sectionResizer object.\r\n */\r\nexport default function sectionResizer(\r\n  container: HTMLElement,\r\n  config: configuration = {\r\n    mode: \"horizontal\",\r\n    resizeMode: \"distributed\",\r\n  }\r\n): {} {\r\n  const default_config: configuration = {\r\n    mode: \"horizontal\",\r\n    resizeMode: \"distributed\",\r\n  };\r\n  config = { ...default_config, ...config };\r\n  const mode = config.mode;\r\n  const resizeMode = config.resizeMode;\r\n\r\n  let x_y: \"x\" | \"y\" = \"x\";\r\n  let w_h: \"width\" | \"height\" = \"width\";\r\n  if (mode === \"vertical\") {\r\n    x_y = \"y\";\r\n    w_h = \"height\";\r\n  } else if (mode !== \"horizontal\") {\r\n    warn(`mode '${mode}' is unknwon. Defaulting to 'horizontal'`);\r\n  }\r\n\r\n  let container_size: number;\r\n\r\n  let initial_container_size: number;\r\n  let sections: Array<section>;\r\n\r\n  let separators: Array<separator>;\r\n\r\n  let resize_observer: ResizeObserver;\r\n  let mutation_observer: MutationObserver;\r\n\r\n  init();\r\n\r\n  function init(): void {\r\n    // store the current container size\r\n    container_size = container.getBoundingClientRect()[w_h];\r\n    initial_container_size = container_size;\r\n\r\n    // set needed style attributes to the container\r\n    const current_position_style = window.getComputedStyle(container).getPropertyValue(\"position\")\r\n    if (![\"absolute\", \"relative\"].includes(current_position_style)) {\r\n        container.style.position = \"relative\";\r\n    }\r\n    container.style.overflow = \"auto\";\r\n    container.style.display = \"grid\";\r\n    //FIXME: I should get rid of these conditions on padding and margin...\r\n    container.style.padding = \"0\";\r\n    container.style.margin = \"0\";\r\n\r\n    // create the event listeners attached to the document element\r\n    // that handle the resizing of the children by dragging the separators\r\n    document.addEventListener(\"pointerdown\", handleResizeStart);\r\n    document.addEventListener(\"pointermove\", handleResizeMove);\r\n    document.addEventListener(\"pointerup\", handleResizeEnd);\r\n\r\n    // retrieve the children\r\n    const children = Array.from(\r\n      container.children as HTMLCollectionOf<HTMLElement>\r\n    );\r\n\r\n    // create the sections\r\n    sections = children.map(buildDefaultSection);\r\n\r\n    // create the separators\r\n    separators = createSeparators(container, children.length, mode);\r\n\r\n    // update the sections sizes\r\n    sections = updateSectionSizes(\r\n      sections,\r\n      sections.map((e) => e.cur_size),\r\n      container_size\r\n    );\r\n    // sections.forEach((s) => (s.ini_size = s.cur_size));\r\n    setInitialSize();\r\n\r\n    // update the grid template\r\n    update();\r\n\r\n    // create a ResizeObserver which is run whenever the container\r\n    // changes sizes (e.g. if the window is resized)\r\n    resize_observer = new ResizeObserver((entries) => {\r\n      const new_container_size: number = container.getBoundingClientRect()[w_h];\r\n      if (new_container_size !== container_size) {\r\n        container_size = new_container_size;\r\n        if (resizeMode !== \"left\" && resizeMode !== \"right\") {\r\n          sections = updateSectionSizes(\r\n            sections,\r\n            sections.map(\r\n              (e) => (e.ini_size / container_size) * new_container_size\r\n            ),\r\n            new_container_size\r\n          );\r\n        } else {\r\n          const change_delta = container_size - initial_container_size;\r\n          if (resizeMode === \"left\") {\r\n            sections = updateSectionSizesOnResize(sections, -1, -change_delta);\r\n          } else if (resizeMode === \"right\") {\r\n            sections = updateSectionSizesOnResize(\r\n              sections,\r\n              sections.length,\r\n              change_delta\r\n            );\r\n          }\r\n        }\r\n      }\r\n      update();\r\n      window.requestAnimationFrame(() => {\r\n        update();\r\n      });\r\n    });\r\n    resize_observer.observe(container);\r\n\r\n    // create a MutationObserver which is run whenever elements are added to\r\n    // the sectionResizer container or removed from it\r\n    mutation_observer = new MutationObserver(() => {\r\n      // stop listening for changes\r\n      mutation_observer.disconnect();\r\n      // remove the existing separators\r\n      separators.forEach((e) => e.element.remove());\r\n      // retrieve the children\r\n      const children = Array.from(\r\n        container.children as HTMLCollectionOf<HTMLElement>\r\n      );\r\n      // re-build sections\r\n      const sections_size_sum =\r\n        sections.reduce((a, c) => a + c.cur_size, 0) / sections.length;\r\n      sections = children.map((e) => {\r\n        const i = sections.findIndex((s) => s.element === e);\r\n        if (i === -1) {\r\n          const default_section = buildDefaultSection(e);\r\n          if (!isNaN(sections_size_sum))\r\n            default_section.cur_size = sections_size_sum;\r\n          return default_section;\r\n        } else {\r\n          return {\r\n            ...sections[i],\r\n          };\r\n        }\r\n      });\r\n\r\n      // create the separators\r\n      separators = createSeparators(container, children.length, mode);\r\n\r\n      // update the sections sizes\r\n      sections = updateSectionSizes(\r\n        sections,\r\n        sections.map((e) => e.cur_size),\r\n        container_size\r\n      );\r\n\r\n      // update the grid template\r\n      update();\r\n\r\n      // re-observe the container for changes\r\n      mutation_observer.observe(container, { childList: true, subtree: false });\r\n    });\r\n    mutation_observer.observe(container, { childList: true, subtree: false });\r\n  }\r\n\r\n  function update() {\r\n    // const container_size = container.getBoundingClientRect()[w_h];\r\n    const gridTemplate = sections\r\n      .map((e) => `${(e.cur_size / container_size) * 100}%`)\r\n      .join(\" \");\r\n    if (mode === \"vertical\") {\r\n      container.style.gridTemplateColumns = \"auto\";\r\n      container.style.gridTemplateRows = gridTemplate;\r\n    } else {\r\n      container.style.gridTemplateRows = \"auto\";\r\n      container.style.gridTemplateColumns = gridTemplate;\r\n    }\r\n    // updateSeparators();\r\n    const position = sections\r\n      .reduce((a, c) => [...a, a[a.length - 1] + c.cur_size], [0])\r\n      .slice(1);\r\n    separators.forEach((s, i) =>\r\n      s.update(`${(position[i] / container_size) * 100}%`)\r\n    );\r\n  }\r\n\r\n  function buildDefaultSection(element: HTMLElement) {\r\n    const min_size =\r\n      \"min\" in element.dataset\r\n        ? Math.max(parseFloat(element.dataset.min), 50)\r\n        : 50;\r\n    const def_size =\r\n      \"init\" in element.dataset\r\n        ? Math.max(min_size, parseFloat(element.dataset.init))\r\n        : null;\r\n    const max_size =\r\n      \"max\" in element.dataset\r\n        ? Math.max(min_size, parseFloat(element.dataset.max))\r\n        : Number.POSITIVE_INFINITY;\r\n    return {\r\n      element: element,\r\n      min_size: min_size,\r\n      max_size: max_size,\r\n      def_size: def_size,\r\n      cur_size: def_size,\r\n      ini_size: def_size,\r\n    };\r\n  }\r\n\r\n  const styleTag = document.createElement(\"style\");\r\n  styleTag.media = \"screen\";\r\n  styleTag.textContent = `* {cursor: ${\r\n    mode === \"vertical\" ? \"n-resize\" : \"e-resize\"\r\n  } !important}`;\r\n\r\n  function setInitialSize() {\r\n    sections = sections.map((e) => ({\r\n      ...e,\r\n      // ini_size: e.element.getBoundingClientRect()[w_h],\r\n      ini_size: e.cur_size,\r\n    }));\r\n    separators = separators.map((e, i) => {\r\n      e.initial_position = e.element.getBoundingClientRect()[x_y];\r\n      return e;\r\n    });\r\n    initial_container_size = container_size;\r\n  }\r\n\r\n  let index: number;\r\n\r\n  function handleResizeStart(event) {\r\n    setInitialSize();\r\n    index = separators.findIndex(\r\n      (s) =>\r\n        s.element === event.target || s.element.children[0] === event.target\r\n    );\r\n    separators.forEach((s) => s.setState(\"silent\"));\r\n    if (index >= 0) {\r\n      event.preventDefault();\r\n      separators[index].setState(\"resizing\");\r\n      separators[index].setHighlight(true);\r\n      document.head.appendChild(styleTag);\r\n    }\r\n  }\r\n  function handleResizeMove(event) {\r\n    if (index >= 0) {\r\n      const mouse_position = event[x_y];\r\n      const change_delta =\r\n        mouse_position - (separators[index].initial_position + 10);\r\n      sections = updateSectionSizesOnResize(sections, index, change_delta);\r\n      update();\r\n    }\r\n  }\r\n  function handleResizeEnd() {\r\n    if (index >= 0) {\r\n      setInitialSize();\r\n      separators[index].setHighlight(false);\r\n      index = -1;\r\n      styleTag.remove();\r\n    }\r\n    separators.forEach((s) => s.setState(\"idle\"));\r\n  }\r\n\r\n  function requestAnimationFramePromise(): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      requestAnimationFrame(() => {\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Configure min and/or max sizes of all sections, or specific sections\r\n   *\r\n   * @param {object[]} config - configuration object\r\n   * @returns A promise that resolve at the next animation frame.\r\n   */\r\n  function configure(\r\n    config: Array<sectionConfig> | sectionsConfig\r\n  ): Promise<void> {\r\n    if (!Array.isArray(config)) {\r\n      config = sections.map((_, index) => ({\r\n        index,\r\n        ...config,\r\n      }));\r\n    }\r\n    config.forEach((e) => {\r\n      if (e.index !== undefined && e.index >= 0 && e.index < sections.length) {\r\n        if (e.min) sections[e.index].min_size = Math.max(50, e.min); // I enforce 50px as a minimum size to prevent weird behavior with scrollbars and overlapping separators\r\n        if (e.max) sections[e.index].max_size = Math.max(0, e.max);\r\n      }\r\n    });\r\n    sections = updateSectionSizes(\r\n      sections,\r\n      sections.map((e) => e.cur_size),\r\n      container_size\r\n    );\r\n    update();\r\n    setInitialSize();\r\n    return requestAnimationFramePromise();\r\n  }\r\n  function resize(config: Array<resizeItem>): Promise<void> {\r\n    // requestAnimationFrame(() => {\r\n    const new_sizes = sections.map((e) => null);\r\n    config.forEach((e) => {\r\n      if (\r\n        e.index !== undefined &&\r\n        e.index >= 0 &&\r\n        e.index < sections.length &&\r\n        e.size !== undefined\r\n      ) {\r\n        new_sizes[e.index] = e.size;\r\n      }\r\n    });\r\n    console.log(\"new_sizes\", new_sizes);\r\n    sections = updateSectionSizes(sections, new_sizes, container_size);\r\n    update();\r\n    setInitialSize();\r\n    // });\r\n\r\n    return requestAnimationFramePromise();\r\n  }\r\n  function getSections(): Array<section> {\r\n    return sections;\r\n  }\r\n  return {\r\n    configure,\r\n    resize,\r\n    getSections,\r\n  };\r\n}\r\n"],"names":[],"mappings":"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"}